# -*- coding: utf-8 -*-
"""DetectingLanguageProportion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CkScQ1ZCqT_ibc6_unPIg1nfTkCO4x9x
"""

# pip3 install langdetect

import pandas as pd
from collections import Counter
from collections import OrderedDict

df1 = pd.read_pickle('AllCountryData.pkl')
print('data is read')

languageDictionary ={'el'    : 'Greek',
'eo'    : 'Esperanto',
'en'    : 'English',
'af'    : 'Afrikaans',
'sw'    : 'Swahili',
'ca'    : 'Catalan',
'it'    : 'Italian',
'sv'    : 'Swedish',
'cs'    : 'Czech',
'cy'    : 'Welsh',
'ar'    : 'Arabic',
'ur'   : 'Urdu',
'ga'    : 'Irish',
'eu'    : 'Basque',
'et'    : 'Estonian',
'az'    : 'Azerbaijani',
'id'    : 'Indonesian',
'es'    : 'Spanish',
'ru'    : 'Russian',
'gl'    : 'Galician',
'nl'    : 'Dutch',
'pt'    : 'Portuguese',
'la'    : 'Latin',
'tr'    : 'Turkish',
'tl'    : 'Filipino',
'lv'    : 'Latvian',
'lt'    : 'Lithuanian',
'th'    : 'Thai',
'vi'    : 'Vietnamese',
'gu'    : 'Gujarati',
'ro'    : 'Romanian',
'is'    : 'Icelandic',
'pl'    : 'Polish',
'ta'    : 'Tamil',
'yi'    : 'Yiddish',
'be'    : 'Belarusian',
'fr'    : 'French',
'bg'    : 'Bulgarian',
'uk'    : 'Ukrainian',
'hr'    : 'Croatian',
'bn'    : 'Bengali',
'sl'    : 'Slovenian',
'ht'    : 'Haitian Creole',
'da'    : 'Danish',
'fa'    : 'Persian',
'hi'    : 'Hindi',
'fi'    : 'Finnish',
'hu'    : 'Hungarian',
'ja'    : 'Japanese',
'ka'    : 'Georgian',
'te'    : 'Telugu',
'zh-TW' : 'Chinese Traditional',
'sq'    : 'Albanian',
'no'    : 'Norwegian',
'ko'    : 'Korean',
'kn'    : 'Kannada',
'mk'    : 'Macedonian',
'zh-CN' : 'Chinese Simplified',
'sk'    : 'Slovak',
'mt'    : 'Maltese',
'de'    : 'German',
'ms'    : 'Malay',
'sr'    : 'Serbian',
'so'    : 'Somali',
'he'    : 'Hebrew',
'ml'    : 'Malayalam',
'ne'    : 'Nepali',
'mr'    : 'Marathi',
'pa'    : 'Panjabi'}

def CalculatePercentage(languages):
    count = Counter(languages).items()
    percentages = {x: round(float(y) / len(languages)* 100, 2) for x, y in count}
    return percentages


languagesList=[]
languagesList = list(languageDictionary.values())

defaultPercentages= OrderedDict()

defaultPercentages = OrderedDict.fromkeys(languagesList,0 )

columns = []
columns.append('Country')
for key in list(defaultPercentages.keys()):
    columns.append(key)
columns.append('None')

tempDict = OrderedDict()
tempDict = defaultPercentages.copy()
tempDict[None] = 0


countries = list(df1['Country'].unique())
df2_rows=[]
for country in countries:
	defaultPercentages = tempDict.copy()
	data = df1[df1['Country'] == country]
	percentageDict = CalculatePercentage(list(data['Language']))
	defaultPercentages.update(percentageDict)
	percentages = []
	percentages = list(defaultPercentages.values())
	percentages.insert(0, country)
	df2_rows.append(tuple(percentages))

# print(df_rows)
df2 = pd.DataFrame(df2_rows, columns = columns)

df2['Total'] = df2.sum(axis=1)

df2['Total'] = df2['Total'].round()


df2.to_csv('LanguagePercentage.csv')
print('Final data is exported..')

